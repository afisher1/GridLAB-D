// test schedule transforms

#set randomseed=17
#set threadcount=2

extern "C" {
	#define TEST
	#include <stdlib.h>
	int myfunction(int nlhs, double *plhs[], int nrhs, double *prhs[])
	{	// make sure the correct number of args are passed in
		if ( nlhs!=1 || nlhs!=1 ) return -1;
		/* subtract 5 from arg */
		*plhs[0] = *prhs[0] - 5;
		return 0;
	}	
}

extern "C" extern_test: myfunction, myfunction1, myfunction2;

module residential {
	default_outdoor_temperature 70.5;
}
module assert;

clock {
	timezone PST+8PDT;
	starttime '2009-01-01 0:00:00 PST';
	stoptime '2009-01-02 0:00:00 PST';
}

schedule test_schedule {
	0-29 * * * * 0
	30-59 * * * * 1
}

class house {
	double myvalue;
}

module tape;
class player {
	double value;
}
object player {
	name t_mass;
	file t_mass.csv;
}

object house {
	
	// transform references property in as-yet undefined object
	cooling_setpoint House1.cooling_setpoint+1;
	
	// transform references property in this objecct
	heating_setpoint myfunction(this.cooling_setpoint);
	
	// transform references schedule
	air_temperature test_schedule+70;
	
	// transform references player
	mass_temperature t_mass.value;	
	
	object double_assert {
		status ASSERT_TRUE;
		once ONCE_DONE;
		within 1;
		value 70;
		target air_temperature;
	};
}
object house {
	name House1;
}
