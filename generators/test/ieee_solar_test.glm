// $Id: powerflow_IEEE_4node.glm 683 2008-06-18 20:16:29Z d3g637 $
// IEEE 4 Node Feeder
//
// Note: This model is for reference purposes as a basis for other models
// It does not produce output in its current form because there are
// no load objects attached to cause time to advance and there are no
// recorders attached to gather the output.  See residential_loads.glm
// for an example model that produces output.
//
//
// Important! note that to work, the inverter AND panel MUST
// be run in SUPPLY_DRIVEN mode! 
//
// example run:
// C:\>gridlabd ieee_solar_test.glm -o solar_test_output -v -w --bothstdout > solar\out.txt
//
// This assumes that the folder "solar" already exists in your working folder
//


clock {
	timestamp '2000-01-01 0:00:00';
	timezone EST+5EDT;
}

module powerflow;
module generators;
module tape;
module climate;

object climate {
	tmyfile ../../../test/weather/ca.los_angeles.23174;
}

object overhead_line_conductor:100 {
	geometric_mean_radius 0.0244;
	resistance 0.306;
}

object overhead_line_conductor:101 {
	geometric_mean_radius 0.00814;
	resistance 0.592;
}

object line_spacing:200 {
	distance_AB 2.5;
	distance_BC 4.5;
	distance_AC 7.0;
	distance_AN 5.656854;
	distance_BN 4.272002;
	distance_CN 5.0;
}

object line_configuration:300 {
	conductor_A overhead_line_conductor:100;
	conductor_B overhead_line_conductor:100;
	conductor_C overhead_line_conductor:100;
	conductor_N overhead_line_conductor:101;
	spacing line_spacing:200;
}

object transformer_configuration:400 {
	connect_type 1;
	power_rating 6000;
	primary_voltage 12470;
	secondary_voltage 600;
	resistance 0.01;
	reactance 0.06;
}

object node {
	name node1;
	phases "ABCN";
	voltage_A +7199.558+0.000j;
	voltage_B -3599.779-6235.000j;
	voltage_C -3599.779+6235.000j;
	nominal_voltage 7200.00;
}

object overhead_line {
	name overline12;
	phases "ABCN";
	from node1;
	to node2;
	length 2000;
	configuration line_configuration:300;
}

object node {
	name node2;
	phases "ABCN";
	voltage_A +7199.558+0.000j;
	voltage_B -3599.779-6235.000j;
	voltage_C -3599.779+6235.000j;
	nominal_voltage 7200.00;
}

object transformer {
	name trans23;
	phases "ABCN";
	from node2;
	to node3;
	configuration transformer_configuration:400;
}


object node {
	name node3;
	phases "ABCN";
	voltage_A 346.410 + 0.000j;
	voltage_B -173.205 - 300.000j;
	voltage_C -173.205 + 300.000j;
	nominal_voltage 346.000;
}

object overhead_line {
	name OHL3L;
	phases "ABCN";
	from node3;
	to load1;
	length 2500;
	configuration line_configuration:300;
}

object load {
	name load1;
	phases "ABCN";
	//voltage_A 445.8 + 0.000j;	//1.12 rated voltage for 690
	//voltage_B -193.990 - 336.000j;
	//voltage_C -193.990 + 336.000j;
	voltage_A 346.410 + 0.000j;
	voltage_B -173.205 - 300.000j;
	voltage_C -173.205 + 300.000j;
	constant_power_A +20000+11500j;
	constant_power_B +20000+11500j;
	constant_power_C +20000+11500j;
	nominal_voltage 346.000;
}


object inverter {
	parent node4;
	generator_mode SUPPLY_DRIVEN;
	name inv;
}

object solar {
	parent inv;
	generator_mode SUPPLY_DRIVEN;
	name s;
}

object meter {
	name node4;
	phases "ABCN";
	nominal_voltage 346.000;	
	voltage_A 346.410 + 0.000j;
	voltage_B -173.205 + 300.000j;
	voltage_C -173.205 - 300.000j;
}

object overhead_line {
	name OHL34;
	phases "ABCN";
	from node3;
	to node4;
	length 25;
	configuration line_configuration:300;
}

object recorder {
	parent load1;
	property voltage_A,voltage_B;
	file "s_test3.txt";
	interval 3600;
	limit 50;
}

object recorder {
	parent node3;
	property voltage_A,voltage_B,voltage_C;
	file "s_node3_test_v.txt";
	interval 3600;
	limit 50;
}

object recorder {
	parent node4;
	property voltage_A,voltage_B,voltage_C;
	file "s_test_node_4v.txt";
	interval 3600;
	limit 50;
}

object recorder {
	parent node4;
	property current_A,current_B,current_C;
	file "s_test_node_4i.txt";
	interval 3600;
	limit 50;
}

object recorder {
	parent s;
	property VA_Out,I_Out,V_Out;
	file "solar_tests.txt";
	interval 3600;
	limit 50;
}

object recorder {
	parent inv;
	property VA_In,I_In,V_In;
	file "inverter_testin.txt";
	interval 3600;
	limit 50;
}

object recorder {
	parent inv;
	property phaseA_V_Out,phaseB_V_Out,phaseC_V_Out,phaseA_I_Out,phaseB_I_Out,phaseC_I_Out;
	file "inverter_testout.txt";
	interval 3600;
	limit 50;
}