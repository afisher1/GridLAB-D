// test_markets_controller2_24.glm tests to see if controller2 calculates
// the rolling 24 hour avg and stdev for a price signal determined by a schedule
// and changes the heating and cooling setpoint correctly

module market;
module powerflow;
module residential {
	implicit_enduses NONE;
}
module tape;
module assert;

clock {
	timezone PST+8PDT;
	starttime '2006-01-01 00:00:00';
	stoptime '2006-01-12 11:00:00';
}

schedule psig {
	block1 {
		* * 1 1 * 5.8019;
		* 0 2 1 * 5.8019;
		* 1 2 1 * 6.0682;
		* 2 2 1 * 3.8586;
		* 3 2 1 * 2.9457;
		* 4 2 1 * 5.5112;
		* 5 2 1 * 7.6730;
		* 6 2 1 * 3.7603;
		* 7 2 1 * 7.8154;
		* 8 2 1 * 3.8530;
		* 9 2 1 * 6.1152;
		* 10 2 1 * 0.8519;
		* 11 2 1 * 4.9492;
		* 12 2 1 * 7.0522;
		* 13 2 1 * 5.8645;
		* 14 2 1 * 7.1027;
		* 15 2 1 * 3.5846;
		* 16 2 1 * 7.9747;
		* 17 2 1 * 5.9039;
		* 18 2 1 * 6.4426;
		* 19 2 1 * 4.1586;
		* 20 2 1 * 4.8383;
		* 21 2 1 * 2.4614;
		* 22 2 1 * 7.3760;
		* 23 2 1 * 6.9315;
		* 0 3 1 * 8.9115;
		* 1 3 1 * 3.6695;
		* 2 3 1 * 3.2188;
		* 3 3 1 * 7.5789;
		* 4 3 1 * 5.1802;
		* 5 3 1 * 4.4508;
		* 6 3 1 * 6.6358;
		* 7 3 1 * 6.0906;
		* 8 3 1 * 4.3073;
		* 9 3 1 * 4.6404;
		* 10 3 1 * 4.7247;
		* 11 3 1 * 6.1144;
		* 12 3 1 * 4.7565;
		* 13 3 1 * 5.0895;
		* 14 3 1 * 7.1332;
		* 15 3 1 * 5.6401;
		* 16 3 1 * 6.0898;
		* 17 3 1 * 6.6754;
		* 18 3 1 * 2.5476;
		* 19 3 1 * 8.0596;
		* 20 3 1 * 0.4411;
		* 21 3 1 * 5.3000;
		* 22 3 1 * 2.1367;
		* 23 3 1 * 6.6729;
		* 0 4 1 * 2.4559;
		* 1 4 1 * 5.3179;
		* 2 4 1 * 5.4338;
		* 3 4 1 * 9.0213;
		* 4 4 1 * 6.1984;
		* 5 4 1 * 1.6446;
		* 6 4 1 * 8.2385;
		* 7 4 1 * 2.5870;
		* 8 4 1 * 4.8724;
		* 9 4 1 * 5.6944;
		* 10 4 1 * 4.9265;
		* 11 4 1 * 4.3624;
		* 12 4 1 * 3.5599;
		* 13 4 1 * 4.7583;
		* 14 4 1 * 6.7348;
	}
	block2 {
		* 15 4 1 * 7.5766;
		* 16 4 1 * 5.5934;
		* 17 4 1 * 8.4099;
		* 18 4 1 * 1.0336;
		* 19 4 1 * 3.0195;
		* 20 4 1 * 4.4797;
		* 21 4 1 * 9.4748;
		* 22 4 1 * 3.6242;
		* 23 4 1 * 6.1598;
		* 0 5 1 * 3.7271;
		* 1 5 1 * 3.0238;
		* 2 5 1 * 5.6918;
		* 3 5 1 * 4.6420;
		* 4 5 1 * 3.1341;
		* 5 5 1 * 4.5613;
		* 6 5 1 * 3.4949;
		* 7 5 1 * 10.2510;
		* 8 5 1 * 5.4913;
		* 9 5 1 * 3.9046;
		* 10 5 1 * 8.7538;
		* 11 5 1 * 2.4882;
		* 12 5 1 * 3.5165;
		* 13 5 1 * 2.5590;
		* 14 5 1 * 0.8347;
		* 15 5 1 * 3.1190;
		* 16 5 1 * 5.0163;
		* 17 5 1 * 5.6406;
		* 18 5 1 * 4.1425;
		* 19 5 1 * 7.2435;
		* 20 5 1 * 3.8123;
		* 21 5 1 * 4.0984;
		* 22 5 1 * 3.1897;
		* 23 5 1 * 4.4747;
		* 0 6 1 * 7.0081;
		* 1 6 1 * -0.6117;
		* 2 6 1 * 5.9729;
		* 3 6 1 * 3.5783;
		* 4 6 1 * 2.8890;
		* 5 6 1 * 7.8118;
		* 6 6 1 * 2.0434;
		* 7 6 1 * 5.3972;
		* 8 6 1 * 8.1597;
		* 9 6 1 * 6.6285;
		* 10 6 1 * 9.0308;
		* 11 6 1 * 10.0888;
		* 12 6 1 * 4.8750;
		* 13 6 1 * 5.3611;
		* 14 6 1 * 3.2605;
		* 15 6 1 * 4.3167;
		* 16 6 1 * 3.9832;
		* 17 6 1 * 4.5725;
		* 18 6 1 * 7.2374;
		* 19 6 1 * 4.4558;
		* 20 6 1 * 2.5341;
		* 21 6 1 * 3.5045;
		* 22 6 1 * 7.6530;
		* 23 6 1 * 2.3949;
		* 0 7 1 * 6.7398;
		* 1 7 1 * 4.2469;
		* 2 7 1 * 3.8059;
		* 3 7 1 * 6.2407;
		* 4 7 1 * 1.2753;
		* 5 7 1 * 6.3262;
	}
	block3 {
		* 6 7 1 * 8.7275;
		* 7 7 1 * 6.9033;
		* 8 7 1 * 4.8635;
		* 9 7 1 * 4.7510;
		* 10 7 1 * 0.9502;
		* 11 7 1 * 7.8665;
		* 12 7 1 * 5.3977;
		* 13 7 1 * 6.7278;
		* 14 7 1 * 7.1682;
		* 15 7 1 * 5.6217;
		* 16 7 1 * 5.3712;
		* 17 7 1 * 3.0015;
		* 18 7 1 * 2.1330;
		* 19 7 1 * 3.8239;
		* 20 7 1 * 7.2397;
		* 21 7 1 * 3.4804;
		* 22 7 1 * 1.9773;
		* 23 7 1 * 4.7007;
		* 0 8 1 * 1.1096;
		* 1 8 1 * 0.3296;
		* 2 8 1 * 7.6509;
		* 3 8 1 * 3.4542;
		* 4 8 1 * 4.3738;
		* 5 8 1 * 7.3384;
		* 6 8 1 * 5.2356;
		* 7 8 1 * 6.5459;
		* 8 8 1 * 7.7759;
		* 9 8 1 * 9.2004;
		* 10 8 1 * 3.2277;
		* 11 8 1 * 8.4883;
		* 12 8 1 * 5.6129;
		* 13 8 1 * 5.0305;
		* 14 8 1 * 1.3732;
		* 15 8 1 * 3.7540;
		* 16 8 1 * 2.1536;
		* 17 8 1 * 5.1353;
		* 18 8 1 * 2.9199;
		* 19 8 1 * 4.7561;
		* 20 8 1 * 5.3156;
		* 21 8 1 * 6.3860;
		* 22 8 1 * 4.3223;
		* 23 8 1 * 7.4772;
		* 0 9 1 * 4.6269;
		* 1 9 1 * 4.7029;
		* 2 9 1 * 5.7436;
		* 3 9 1 * 4.0445;
		* 4 9 1 * 4.8214;
		* 5 9 1 * 5.3796;
		* 6 9 1 * 5.0175;
		* 7 9 1 * 10.8263;
		* 8 9 1 * 1.6498;
		* 9 9 1 * 4.0514;
		* 10 9 1 * 2.5858;
		* 11 9 1 * 6.6587;
		* 12 9 1 * 6.4334;
		* 13 9 1 * 4.1530;
		* 14 9 1 * 5.9274;
		* 15 9 1 * 5.3790;
		* 16 9 1 * 7.8881;
		* 17 9 1 * 5.1215;
		* 18 9 1 * 3.9633;
		* 19 9 1 * 5.0459;
		* 20 9 1 * 4.7976;
	}
	block4 {
		* 21 9 1 * 1.6920;
		* 22 9 1 * 2.3782;
		* 23 9 1 * 5.4098;
		* 0 10 1 * 4.9535;
		* 1 10 1 * 4.0016;
		* 2 10 1 * 2.9985;
		* 3 10 1 * 6.9921;
		* 4 10 1 * 6.4365;
		* 5 10 1 * 5.7596;
		* 6 10 1 * 3.7995;
		* 7 10 1 * 6.2895;
		* 8 10 1 * 5.8811;
		* 9 10 1 * 3.7548;
		* 10 10 1 * 6.6131;
		* 11 10 1 * 10.2870;
		* 12 10 1 * 1.4479;
		* 13 10 1 * 0.9642;
		* 14 10 1 * 2.2675;
		* 15 10 1 * 7.3433;
		* 16 10 1 * 5.5241;
		* 17 10 1 * 6.3293;
		* 18 10 1 * 6.5586;
		* 19 10 1 * 7.6311;
		* 20 10 1 * 1.5042;
		* 21 10 1 * 2.4056;
		* 22 10 1 * 9.8087;
		* 23 10 1 * 5.8789;
		* 0 11 1 * 8.8283;
		* 1 11 1 * 4.7610;
		* 2 11 1 * 7.2834;
		* 3 11 1 * 5.7136;
		* 4 11 1 * 5.2825;
		* 5 11 1 * 8.1295;
		* 6 11 1 * 5.4631;
		* 7 11 1 * 6.2433;
		* 8 11 1 * 5.2226;
		* 9 11 1 * 2.2320;
		* 10 11 1 * 4.5484;
		* 11 11 1 * 6.1031;
		* 12 11 1 * 4.6790;
		* 13 11 1 * 6.2570;
		* 14 11 1 * 8.6315;
		* 15 11 1 * 6.1834;
		* 16 11 1 * 5.0375;
		* 17 11 1 * 5.8142;
		* 18 11 1 * 6.3313;
		* 19 11 1 * 4.6485;
		* 20 11 1 * 1.7984;
		* 21 11 1 * 4.8473;
		* 22 11 1 * 6.0249;
		* 23 11 1 * 6.0641;
		* 0 12 1 * 5.4192;
		* 1 12 1 * 6.7447;
		* 2 12 1 * 5.9335;
		* 3 12 1 * 4.5275;
		* 4 12 1 * 6.1650;
		* 5 12 1 * 1.5998;
		* 6 12 1 * 6.8204;
		* 7 12 1 * 3.5651;
		* 8 12 1 * 4.0402;
		* 9 12 1 * 3.3572;
		* 10 12 1 * 2.1525;
		* 11 12 1 * 5.2001;
	}
}

schedule hstp {
	block1 {
		* * 1 1 * 62.0000;
		* 0 2 1 * 62.0000;
		* 1 2 1 * 55.0000;
		* 2 2 1 * 72.0000;
		* 3 2 1 * 72.0000;
		* 4 2 1 * 64.2183;
		* 5 2 1 * 56.8843;
		* 6 2 1 * 72.0000;
		* 7 2 1 * 57.5802;
		* 8 2 1 * 72.0000;
		* 9 2 1 * 61.0226;
		* 10 2 1 * 72.0000;
		* 11 2 1 * 66.9607;
		* 12 2 1 * 59.7117;
		* 13 2 1 * 61.3807;
		* 14 2 1 * 59.7778;
		* 15 2 1 * 72.0000;
		* 16 2 1 * 58.8538;
		* 17 2 1 * 61.4656;
		* 18 2 1 * 60.8291;
		* 19 2 1 * 72.0000;
		* 20 2 1 * 67.6753;
		* 21 2 1 * 72.0000;
		* 22 2 1 * 59.6740;
		* 23 2 1 * 60.2567;
		* 0 3 1 * 58.4451;
		* 1 3 1 * 72.0000;
		* 2 3 1 * 72.0000;
		* 3 3 1 * 59.9387;
		* 4 3 1 * 65.1421;
		* 5 3 1 * 70.3245;
		* 6 3 1 * 60.8441;
		* 7 3 1 * 61.3236;
		* 8 3 1 * 72.0000;
		* 9 3 1 * 69.0393;
		* 10 3 1 * 70.9260;
		* 11 3 1 * 61.3943;
		* 12 3 1 * 70.2146;
		* 13 3 1 * 66.3741;
		* 14 3 1 * 59.9289;
		* 15 3 1 * 61.9379;
		* 16 3 1 * 61.2037;
		* 17 3 1 * 60.4551;
		* 18 3 1 * 72.0000;
		* 19 3 1 * 58.9057;
		* 20 3 1 * 72.0000;
		* 21 3 1 * 63.6552;
		* 22 3 1 * 72.0000;
		* 23 3 1 * 60.4823;
		* 0 4 1 * 72.0000;
		* 1 4 1 * 61.7005;
		* 2 4 1 * 61.6665;
		* 3 4 1 * 57.8393;
		* 4 4 1 * 60.9688;
		* 5 4 1 * 72.0000;
		* 6 4 1 * 59.0226;
		* 7 4 1 * 72.0000;
		* 8 4 1 * 63.5936;
		* 9 4 1 * 61.4496;
		* 10 4 1 * 63.5795;
		* 11 4 1 * 67.4619;
		* 12 4 1 * 72.0000;
		* 13 4 1 * 63.8149;
		* 14 4 1 * 60.3162;
	}
	block2 {
		* 15 4 1 * 59.6536;
		* 16 4 1 * 61.4776;
		* 17 4 1 * 59.0248;
		* 18 4 1 * 72.0000;
		* 19 4 1 * 72.0000;
		* 20 4 1 * 66.1457;
		* 21 4 1 * 58.1778;
		* 22 4 1 * 72.0000;
		* 23 4 1 * 61.1325;
		* 0 5 1 * 72.0000;
		* 1 5 1 * 72.0000;
		* 2 5 1 * 61.5324;
		* 3 5 1 * 64.9206;
		* 4 5 1 * 72.0000;
		* 5 5 1 * 65.6920;
		* 6 5 1 * 72.0000;
		* 7 5 1 * 57.0354;
		* 8 5 1 * 61.6630;
		* 9 5 1 * 71.2196;
		* 10 5 1 * 58.7947;
		* 11 5 1 * 72.0000;
		* 12 5 1 * 72.0000;
		* 13 5 1 * 72.0000;
		* 14 5 1 * 72.0000;
		* 15 5 1 * 72.0000;
		* 16 5 1 * 61.6501;
		* 17 5 1 * 60.9766;
		* 18 5 1 * 65.6220;
		* 19 5 1 * 59.7508;
		* 20 5 1 * 69.1552;
		* 21 5 1 * 65.6862;
		* 22 5 1 * 72.0000;
		* 23 5 1 * 61.9752;
		* 0 6 1 * 59.5862;
		* 1 6 1 * 72.0000;
		* 2 6 1 * 60.6375;
		* 3 6 1 * 68.0531;
		* 4 6 1 * 72.0000;
		* 5 6 1 * 59.2039;
		* 6 6 1 * 72.0000;
		* 7 6 1 * 60.9182;
		* 8 6 1 * 58.5856;
		* 9 6 1 * 60.1047;
		* 10 6 1 * 58.0234;
		* 11 6 1 * 57.7587;
		* 12 6 1 * 62.0008;
		* 13 6 1 * 61.6956;
		* 14 6 1 * 72.0000;
		* 15 6 1 * 67.9845;
		* 16 6 1 * 70.0481;
		* 17 6 1 * 65.4804;
		* 18 6 1 * 60.2270;
		* 19 6 1 * 66.4231;
		* 20 6 1 * 72.0000;
		* 21 6 1 * 72.0000;
		* 22 6 1 * 59.9012;
		* 23 6 1 * 72.0000;
		* 0 7 1 * 60.6219;
		* 1 7 1 * 70.0203;
		* 2 7 1 * 72.0000;
		* 3 7 1 * 61.1142;
		* 4 7 1 * 72.0000;
		* 5 7 1 * 60.9341;
	}
	block3 {
		* 6 7 1 * 58.9859;
		* 7 7 1 * 60.7322;
		* 8 7 1 * 65.9692;
		* 9 7 1 * 66.2600;
		* 10 7 1 * 72.0000;
		* 11 7 1 * 58.9416;
		* 12 7 1 * 61.4831;
		* 13 7 1 * 60.2143;
		* 14 7 1 * 59.9508;
		* 15 7 1 * 61.5438;
		* 16 7 1 * 61.8504;
		* 17 7 1 * 72.0000;
		* 18 7 1 * 72.0000;
		* 19 7 1 * 70.6678;
		* 20 7 1 * 59.9441;
		* 21 7 1 * 72.0000;
		* 22 7 1 * 72.0000;
		* 23 7 1 * 64.2098;
		* 0 8 1 * 72.0000;
		* 1 8 1 * 72.0000;
		* 2 8 1 * 59.5346;
		* 3 8 1 * 70.1394;
		* 4 8 1 * 64.7302;
		* 5 8 1 * 59.7787;
		* 6 8 1 * 61.4509;
		* 7 8 1 * 60.2081;
		* 8 8 1 * 59.2816;
		* 9 8 1 * 58.4311;
		* 10 8 1 * 72.0000;
		* 11 8 1 * 59.0302;
		* 12 8 1 * 61.5271;
		* 13 8 1 * 61.9694;
		* 14 8 1 * 72.0000;
		* 15 8 1 * 68.4698;
		* 16 8 1 * 72.0000;
		* 17 8 1 * 61.5755;
		* 18 8 1 * 72.0000;
		* 19 8 1 * 61.9543;
		* 20 8 1 * 61.3940;
		* 21 8 1 * 60.5720;
		* 22 8 1 * 65.8299;
		* 23 8 1 * 59.7998;
		* 0 9 1 * 65.6454;
		* 1 9 1 * 66.9881;
		* 2 9 1 * 61.4243;
		* 3 9 1 * 72.0000;
		* 4 9 1 * 65.8293;
		* 5 9 1 * 61.7638;
		* 6 9 1 * 63.2986;
		* 7 9 1 * 56.7595;
		* 8 9 1 * 72.0000;
		* 9 9 1 * 68.7623;
		* 10 9 1 * 72.0000;
		* 11 9 1 * 60.0163;
		* 12 9 1 * 60.3068;
		* 13 9 1 * 67.1874;
		* 14 9 1 * 60.9265;
		* 15 9 1 * 61.6011;
		* 16 9 1 * 59.0577;
		* 17 9 1 * 63.2565;
		* 18 9 1 * 72.0000;
		* 19 9 1 * 64.5308;
		* 20 9 1 * 66.6680;
	}
	block4 {
		* 21 9 1 * 72.0000;
		* 22 9 1 * 72.0000;
		* 23 9 1 * 61.4859;
		* 0 10 1 * 61.9884;
		* 1 10 1 * 70.0011;
		* 2 10 1 * 72.0000;
		* 3 10 1 * 59.8724;
		* 4 10 1 * 60.5294;
		* 5 10 1 * 61.2350;
		* 6 10 1 * 71.5771;
		* 7 10 1 * 60.1122;
		* 8 10 1 * 60.7445;
		* 9 10 1 * 72.0000;
		* 10 10 1 * 59.9231;
		* 11 10 1 * 56.2648;
		* 12 10 1 * 72.0000;
		* 13 10 1 * 72.0000;
		* 14 10 1 * 72.0000;
		* 15 10 1 * 59.6732;
		* 16 10 1 * 61.2403;
		* 17 10 1 * 60.5264;
		* 18 10 1 * 60.4261;
		* 19 10 1 * 59.5885;
		* 20 10 1 * 72.0000;
		* 21 10 1 * 72.0000;
		* 22 10 1 * 58.1349;
		* 23 10 1 * 61.4526;
		* 0 11 1 * 59.2312;
		* 1 11 1 * 66.3865;
		* 2 11 1 * 60.6225;
		* 3 11 1 * 61.8610;
		* 4 11 1 * 63.4545;
		* 5 11 1 * 59.9550;
		* 6 11 1 * 63.3542;
		* 7 11 1 * 61.5262;
		* 8 11 1 * 64.7730;
		* 9 11 1 * 72.0000;
		* 10 11 1 * 68.1427;
		* 11 11 1 * 61.3178;
		* 12 11 1 * 67.7748;
		* 13 11 1 * 61.4072;
		* 14 11 1 * 59.2267;
		* 15 11 1 * 61.6886;
		* 16 11 1 * 69.0403;
		* 17 11 1 * 62.2344;
		* 18 11 1 * 61.4821;
		* 19 11 1 * 71.1670;
		* 20 11 1 * 72.0000;
		* 21 11 1 * 71.1020;
		* 22 11 1 * 61.5399;
		* 23 11 1 * 61.5001;
		* 0 12 1 * 63.2752;
		* 1 12 1 * 60.4282;
		* 2 12 1 * 61.4619;
		* 3 12 1 * 72.0000;
		* 4 12 1 * 61.1252;
		* 5 12 1 * 72.0000;
		* 6 12 1 * 60.0704;
		* 7 12 1 * 72.0000;
		* 8 12 1 * 72.0000;
		* 9 12 1 * 72.0000;
		* 10 12 1 * 72.0000;
		* 11 12 1 * 61.8475;
	}
}

schedule cstp {
	block1 {
		* * 1 1 * 78.0000;
		* 0 2 1 * 78.0000;
		* 1 2 1 * 83.0000;
		* 2 2 1 * 76.0000;
		* 3 2 1 * 76.0000;
		* 4 2 1 * 77.9261;
		* 5 2 1 * 83.0000;
		* 6 2 1 * 76.8350;
		* 7 2 1 * 82.5100;
		* 8 2 1 * 77.0706;
		* 9 2 1 * 78.9973;
		* 10 2 1 * 76.2015;
		* 11 2 1 * 77.8346;
		* 12 2 1 * 80.3350;
		* 13 2 1 * 78.6320;
		* 14 2 1 * 80.2675;
		* 15 2 1 * 77.3443;
		* 16 2 1 * 81.2104;
		* 17 2 1 * 78.5453;
		* 18 2 1 * 79.1948;
		* 19 2 1 * 77.5665;
		* 20 2 1 * 77.8108;
		* 21 2 1 * 77.1059;
		* 22 2 1 * 80.3735;
		* 23 2 1 * 79.7789;
		* 0 3 1 * 81.6275;
		* 1 3 1 * 77.5120;
		* 2 3 1 * 77.3999;
		* 3 3 1 * 80.1033;
		* 4 3 1 * 77.8953;
		* 5 3 1 * 77.7225;
		* 6 3 1 * 79.1795;
		* 7 3 1 * 78.6902;
		* 8 3 1 * 77.6467;
		* 9 3 1 * 77.7654;
		* 10 3 1 * 77.7025;
		* 11 3 1 * 78.6181;
		* 12 3 1 * 77.7262;
		* 13 3 1 * 77.8542;
		* 14 3 1 * 80.1133;
		* 15 3 1 * 78.0634;
		* 16 3 1 * 78.8125;
		* 17 3 1 * 79.5764;
		* 18 3 1 * 77.0021;
		* 19 3 1 * 81.1575;
		* 20 3 1 * 76.5803;
		* 21 3 1 * 77.9448;
		* 22 3 1 * 77.0865;
		* 23 3 1 * 79.5487;
		* 0 4 1 * 77.2252;
		* 1 4 1 * 78.3056;
		* 2 4 1 * 78.3403;
		* 3 4 1 * 82.2456;
		* 4 4 1 * 79.0523;
		* 5 4 1 * 77.0284;
		* 6 4 1 * 81.0382;
		* 7 4 1 * 77.3543;
		* 8 4 1 * 77.9469;
		* 9 4 1 * 78.5616;
		* 10 4 1 * 77.9473;
		* 11 4 1 * 77.8179;
		* 12 4 1 * 77.6234;
		* 13 4 1 * 77.9395;
		* 14 4 1 * 79.7182;
	}
	block2 {
		* 15 4 1 * 80.3943;
		* 16 4 1 * 78.5331;
		* 17 4 1 * 81.0359;
		* 18 4 1 * 77.0462;
		* 19 4 1 * 77.5584;
		* 20 4 1 * 77.8618;
		* 21 4 1 * 81.9002;
		* 22 4 1 * 77.5951;
		* 23 4 1 * 78.8852;
		* 0 5 1 * 77.6017;
		* 1 5 1 * 77.4561;
		* 2 5 1 * 78.4772;
		* 3 5 1 * 77.9026;
		* 4 5 1 * 77.5325;
		* 5 5 1 * 77.8769;
		* 6 5 1 * 77.6110;
		* 7 5 1 * 83.0000;
		* 8 5 1 * 78.3439;
		* 9 5 1 * 77.6927;
		* 10 5 1 * 81.2707;
		* 11 5 1 * 77.3531;
		* 12 5 1 * 77.6037;
		* 13 5 1 * 77.4078;
		* 14 5 1 * 77.1014;
		* 15 5 1 * 77.6531;
		* 16 5 1 * 78.3571;
		* 17 5 1 * 79.0442;
		* 18 5 1 * 77.8793;
		* 19 5 1 * 80.2951;
		* 20 5 1 * 77.7615;
		* 21 5 1 * 77.8771;
		* 22 5 1 * 77.6305;
		* 23 5 1 * 78.0253;
		* 0 6 1 * 80.4630;
		* 1 6 1 * 76.7581;
		* 2 6 1 * 79.3903;
		* 3 6 1 * 77.7982;
		* 4 6 1 * 77.6331;
		* 5 6 1 * 80.8531;
		* 6 6 1 * 77.4431;
		* 7 6 1 * 79.1039;
		* 8 6 1 * 81.4841;
		* 9 6 1 * 79.9340;
		* 10 6 1 * 82.0578;
		* 11 6 1 * 82.3278;
		* 12 6 1 * 78.0000;
		* 13 6 1 * 78.3106;
		* 14 6 1 * 77.5632;
		* 15 6 1 * 77.8005;
		* 16 6 1 * 77.7317;
		* 17 6 1 * 77.8840;
		* 18 6 1 * 79.8092;
		* 19 6 1 * 77.8526;
		* 20 6 1 * 77.4133;
		* 21 6 1 * 77.6505;
		* 22 6 1 * 80.1416;
		* 23 6 1 * 77.3883;
		* 0 7 1 * 79.4062;
		* 1 7 1 * 77.7327;
		* 2 7 1 * 77.6443;
		* 3 7 1 * 78.9039;
		* 4 7 1 * 77.0187;
		* 5 7 1 * 79.0877;
	}
	block3 {
		* 6 7 1 * 81.0756;
		* 7 7 1 * 79.2936;
		* 8 7 1 * 77.8677;
		* 9 7 1 * 77.8580;
		* 10 7 1 * 76.9688;
		* 11 7 1 * 81.1208;
		* 12 7 1 * 78.5274;
		* 13 7 1 * 79.8222;
		* 14 7 1 * 80.0911;
		* 15 7 1 * 78.4655;
		* 16 7 1 * 78.1526;
		* 17 7 1 * 77.4179;
		* 18 7 1 * 77.2541;
		* 19 7 1 * 77.7111;
		* 20 7 1 * 80.0979;
		* 21 7 1 * 77.5666;
		* 22 7 1 * 77.2375;
		* 23 7 1 * 77.9263;
		* 0 8 1 * 77.0633;
		* 1 8 1 * 76.9840;
		* 2 8 1 * 80.5157;
		* 3 8 1 * 77.7287;
		* 4 8 1 * 77.9090;
		* 5 8 1 * 80.2666;
		* 6 8 1 * 78.5603;
		* 7 8 1 * 79.8285;
		* 8 8 1 * 80.7738;
		* 9 8 1 * 81.6417;
		* 10 8 1 * 77.5649;
		* 11 8 1 * 81.0304;
		* 12 8 1 * 78.4825;
		* 13 8 1 * 78.0312;
		* 14 8 1 * 77.2091;
		* 15 8 1 * 77.7843;
		* 16 8 1 * 77.4521;
		* 17 8 1 * 78.4331;
		* 18 8 1 * 77.5920;
		* 19 8 1 * 78.0466;
		* 20 8 1 * 78.6183;
		* 21 8 1 * 79.4571;
		* 22 8 1 * 77.8723;
		* 23 8 1 * 80.2451;
		* 0 9 1 * 77.8785;
		* 1 9 1 * 77.8337;
		* 2 9 1 * 78.5874;
		* 3 9 1 * 77.6475;
		* 4 9 1 * 77.8724;
		* 5 9 1 * 78.2410;
		* 6 9 1 * 77.9567;
		* 7 9 1 * 83.0000;
		* 8 9 1 * 77.1241;
		* 9 9 1 * 77.7746;
		* 10 9 1 * 77.3848;
		* 11 9 1 * 80.0242;
		* 12 9 1 * 79.7277;
		* 13 9 1 * 77.8271;
		* 14 9 1 * 79.0955;
		* 15 9 1 * 78.4070;
		* 16 9 1 * 81.0023;
		* 17 9 1 * 77.9581;
		* 18 9 1 * 77.5787;
		* 19 9 1 * 77.9156;
		* 20 9 1 * 77.8444;
	}
	block4 {
		* 21 9 1 * 76.9971;
		* 22 9 1 * 77.2511;
		* 23 9 1 * 78.5246;
		* 0 10 1 * 78.0118;
		* 1 10 1 * 77.7333;
		* 2 10 1 * 77.4811;
		* 3 10 1 * 80.1710;
		* 4 10 1 * 79.5006;
		* 5 10 1 * 78.7806;
		* 6 10 1 * 77.6808;
		* 7 10 1 * 79.9263;
		* 8 10 1 * 79.2811;
		* 9 10 1 * 77.5714;
		* 10 10 1 * 80.1192;
		* 11 10 1 * 83.0000;
		* 12 10 1 * 76.9552;
		* 13 10 1 * 76.9408;
		* 14 10 1 * 77.3484;
		* 15 10 1 * 80.3743;
		* 16 10 1 * 78.7752;
		* 17 10 1 * 79.5037;
		* 18 10 1 * 79.6061;
		* 19 10 1 * 80.4607;
		* 20 10 1 * 77.1911;
		* 21 10 1 * 77.3912;
		* 22 10 1 * 81.9440;
		* 23 10 1 * 78.5585;
		* 0 11 1 * 80.8253;
		* 1 11 1 * 77.8538;
		* 2 11 1 * 79.4056;
		* 3 11 1 * 78.1419;
		* 4 11 1 * 77.9515;
		* 5 11 1 * 80.0868;
		* 6 11 1 * 77.9549;
		* 7 11 1 * 78.4834;
		* 8 11 1 * 77.9076;
		* 9 11 1 * 77.2709;
		* 10 11 1 * 77.7952;
		* 11 11 1 * 78.6961;
		* 12 11 1 * 77.8075;
		* 13 11 1 * 78.6049;
		* 14 11 1 * 80.8299;
		* 15 11 1 * 78.3178;
		* 16 11 1 * 77.7653;
		* 17 11 1 * 77.9922;
		* 18 11 1 * 78.5285;
		* 19 11 1 * 77.6944;
		* 20 11 1 * 76.8537;
		* 21 11 1 * 77.6966;
		* 22 11 1 * 78.4695;
		* 23 11 1 * 78.5101;
		* 0 12 1 * 77.9575;
		* 1 12 1 * 79.6039;
		* 2 12 1 * 78.5491;
		* 3 12 1 * 77.6200;
		* 4 12 1 * 78.8927;
		* 5 12 1 * 76.6705;
		* 6 12 1 * 79.9690;
		* 7 12 1 * 77.4229;
		* 8 12 1 * 77.6103;
		* 9 12 1 * 77.3287;
		* 10 12 1 * 77.0017;
		* 11 12 1 * 78.1556;
	}
}

object stubauction {
	name PRICESIG;
	unit price;
	period 3600;
	next.P psig*1;
	verbose TRUE;
}

object triplex_meter {
	phases AS;
	nominal_voltage 120;
	object house {
		cooling_setpoint 75;
		object passive_controller {
			base_setpoint 78;
			control_mode RAMP;
			sensitivity 1;
			expectation_obj PRICESIG;
			expectation_prop avg24;
			setpoint_prop cooling_setpoint;
			state_prop override;
			observation_obj PRICESIG;
			observation_prop next.P;
			mean_observation_prop avg24;
			stdev_observation_prop std24;
			range_low -2;
			range_high 5;
			ramp_low 3.5640;
			ramp_high 2.3979;
			object recorder {
				property setpoint,observation,mean_observation,stdev_observation;
				file "cool_setpoint_24.csv";
				interval 3600;
				limit 276;
			};
		};
		heating_setpoint 65;
		object passive_controller {
			base_setpoint 62;
			control_mode RAMP;
			sensitivity 1;
			expectation_obj PRICESIG;
			expectation_prop avg24;
			setpoint_prop heating_setpoint;
			state_prop override;
			observation_obj PRICESIG;
			observation_prop next.P;
			mean_observation_prop avg24;
			stdev_observation_prop std24;
			range_low -7;
			range_high 10;
			ramp_low -0.5940;
			ramp_high -3.4256;
			object recorder {
				property setpoint,observation,mean_observation,stdev_observation;
				file "heat_setpoint_24.csv";
				interval 3600;
				limit 276;
			};
		};
		object recorder {
			property cooling_setpoint,heating_setpoint;
			file "HCAC_setpoint_24.csv";
			interval 3600;
			limit 276;
		};
		object double_assert {
			target heating_setpoint;
			value hstp*1;
			within 0.001;
		};
		object double_assert {
			target cooling_setpoint;
			value cstp*1;
			within 0.001;
		};
	};
}