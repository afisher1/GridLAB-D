//Regulator Self-Test
//Tests that voltages are stepped up and down correctly for a given
//  type (A and B) in manual control mode as compared to Matlab test
//  file.  Assumed to be lossless. Automatic tapping is not yet fully 
//  supported and not tested at this time.  Only Wye-Wye and single
//  phase are supported at this time.

#set iteration_limit=100

clock {
	timezone EST+5EDT;
	starttime '2000-01-01 00:00:00 EST';
}

module assert;
module powerflow;

///////////////////////////////////////////////////////
// test 8: regulator
///////////////////////////////////////////////////////
// Three Single Phase WYE Connected 

object regulator {
	phases ABCN;
	configuration object regulator_configuration {
		connect_type WYE_WYE;
		band_center 120;
		band_width 2;
		time_delay 30;
		raise_taps 16;
		lower_taps 16;
		current_transducer_ratio  600;
		power_transducer_ratio   60;
		compensator_r_setting_A   6.0;
		compensator_x_setting_A   12.0;
		compensator_r_setting_B   6.0;
		compensator_x_setting_B   12.0;
		compensator_r_setting_C   6.0;
		compensator_x_setting_C   12.0;
		CT_phase "ABC";
		PT_phase "ABC";
		regulation 0.10;
		Control MANUAL;
		Type B;
		tap_pos_A 4;
		tap_pos_B -5;
 		tap_pos_C 9;
	};
	from object node {
		name reg_fABC;
		phases ABCN;
		voltage_A 7200+0j;		
		voltage_B -3600-6235.4j;
		voltage_C -3600+6235.4j;
		nominal_voltage 7200.00;
	};
	to object node {
		name reg_tABC;
		phases ABCN;
		voltage_A 7200+0j;		
		voltage_B -3600-6235.4j;
		voltage_C -3600+6235.4j;
		nominal_voltage 7200.00;
		object complex_assert {
			target "voltage_A";
			value 7384.62+0j;
			within 0.01;
		};
		object complex_assert {
			target "voltage_B";
			value -3490.91-6046.45j;
			within 0.01;
		};
		object complex_assert {
			target "voltage_C";
			value -3814.57+6607.05j;
			within 0.01;
		};		
	};	
};

object regulator {
	phases ABCN;
	configuration object regulator_configuration {
		connect_type WYE_WYE;
		band_center 120;
		band_width 2;
		time_delay 30;
		raise_taps 16;
		lower_taps 16;
		current_transducer_ratio  600;
		power_transducer_ratio   60;
		compensator_r_setting_A   6.0;
		compensator_x_setting_A   12.0;
		compensator_r_setting_B   6.0;
		compensator_x_setting_B   12.0;
		compensator_r_setting_C   6.0;
		compensator_x_setting_C   12.0;
		CT_phase "ABC";
		PT_phase "ABC";
		regulation 0.10;
		Control MANUAL;
		Type B;
		tap_pos_A -2;
		tap_pos_B 4;
 		tap_pos_C 8;
	};
	from object node {
		name reg_fABC2;
		phases ABCN;
		voltage_A 7200+0j;		
		voltage_B -3600-6235.4j;
		voltage_C -3600+6235.4j;
		nominal_voltage 7200.00;
	};
	to object load {
		name reg_tABC2;
		phases ABCN;
		voltage_A 7200.000+0.000j;		
		voltage_B -3600.000-6235.382907j;
		voltage_C -3600.000+6235.382907j;
		nominal_voltage 7200.00;
		constant_power_A 1000+2000j;
		constant_power_B 1000+2000j;
		constant_power_C 1000+2000j;
		constant_impedance_A 1500+750j;
		constant_impedance_B 1500+750j;
		constant_impedance_C 1500+750j;
		constant_current_A 1;
		constant_current_B -0.500-0.8660254j;
		constant_current_C -0.500+0.8660254j;
		object complex_assert {
			target "voltage_A";
			value 7111.11+0j;
			within 0.1;
		};
		object complex_assert {
			target "voltage_B";
			value -3692.308-6395.2645j;
			within 0.1;
		};
		object complex_assert {
			target "voltage_C";
			value -3789.474+6563.561j;
			within 0.1;
		};
	};
	object double_assert {
		target "power_in";
		value 122171.417;
		within 0.5;
	};
	object double_assert {
		target "power_out";
		value 122171.417;
		within 0.5;
	};	
	
};

