// Validation test for example 11.1 in Kersting, chapter 11

// (a very basic test of the center-tapped transformer)
// sets up a single three-phase node at 7200 V and connects it to a triplex meter
// at 240v12 via a 50 kVA center-tapped transformer. On the triplex side of the 
// system, there are loads between line 1 and neutral, line 2 and neutral, and line 1 - line 2
// this test validates the voltages across those loads; triplex meter includes validation
// tests for measured_current, measured_voltage, and measured_power with Newton Raphson

// created by: alek332

clock {
     timezone CST+6CDT;
     timestamp '2006-01-01 00:00:00';
}

module powerflow {
     solver_method NR;
}
module assert;
module tape;

object node {
     name 3phase;
     phases ABCN;
	 bustype SWING;
     nominal_voltage 7200;
}

// transformer from example 11.1
object transformer_configuration {
     name default_transformer;
     connect_type SINGLE_PHASE_CENTER_TAPPED;
     install_type PADMOUNT;
     primary_voltage 7200 V;
     secondary_voltage 120 V;
     power_rating 50.0;
	 powerA_rating 50.0;
	 resistance 0.011;
	 reactance 0.018;
}

object transformer {
     name center_tap_transformer_A;
     phases AS;
     from 3phase;
     to trip_node;
     configuration default_transformer;
}

// triplex secondary line
object triplex_node {
	name trip_node;
     phases AS;
     nominal_voltage 120.00;
}


// configuration arbitrary
object triplex_line_conductor {
      name 1/0 AA triplex;
      resistance 0.97;
      geometric_mean_radius 0.0111;
}

object triplex_line_configuration {
      name TLCFG;
      conductor_1 1/0 AA triplex;
      conductor_2 1/0 AA triplex;
      conductor_N 1/0 AA triplex;
      insulation_thickness 0.08;
      diameter 0.368;
}

// triplex_line necessary in simulation to make NR solver happy
object triplex_line {
	from trip_node;
	to load_node;
	phases AS;
	length 0.0000001; // extremely small length to simulte direct connection to 
	configuration TLCFG; // transformer.
};

// load node
object triplex_meter {
	name load_node;
	phases AS;
	impedance_1 1.4+0.5j;
	impedance_2  0.9+0.4j;
	impedance_12 2.0+1.2j;
	nominal_voltage 120.00;
	bill_mode UNIFORM;
	object complex_assert {
		target measured_power;
		value 42161.35+21149.7357j; 
		within 40;
	 };
	object complex_assert {
		target indiv_measured_power_1;
		value 21199+25.9925d; 
		within 28;
	 };
	object complex_assert {
		target indiv_measured_power_2;
		value +23106.6+11859.2j; 
		within 28;					
	 };
	// object complex_assert { // doesn't work yet
		// target measured_current_N;
		// value -40.94+147.0d; //
		// within 1;
	 // };
	 object complex_assert {
		target measured_current_1;
		value 179.6-26.6d; 
		within .25;
	 };
	 object complex_assert {
		target measured_current_2;
		value 220.4+152.2d; 
		within .25;
	 };
	 object complex_assert {
		target measured_voltage_N;
		value 0; 
		within .25;
	 };
	 object complex_assert {
		target measured_voltage_1;
		value 118-0.6131d; 
		within .25;
	 };
	 object complex_assert {
		target measured_voltage_2;
		value 117.9-0.61421d; 
		within .25;
	 };
	 object complex_assert {
		target voltage_1;
		value 118-0.6131d; 
		within .25;
	 };
	 object complex_assert {
		target voltage_2;
		value 117.9-0.61421d; 
		within .25;
	 };
	 object complex_assert {
		target voltage_12;
		value 235.9-0.6147d; 
		within .25;
	 };
}
